<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>