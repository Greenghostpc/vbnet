<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>